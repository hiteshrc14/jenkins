<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spinnaker Report</title>
    <style>
        /* CSS for table styling */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f6f8fa;
            margin: 0;
            padding: 20px;
        }
        .panel {
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border-radius: 4px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid #e6e9ed; /* Added border */
        }
        h1 {
            color: #364656;
        }
        table {
            border-collapse: collapse;
            width: 100%;
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border-radius: 4px;
        }
        th, td {
            border: 1px solid #e6e9ed;
            padding: 8px; /* Adjusted padding */
            text-align: left;
            font-size: 14px; /* Adjusted font size */
            max-width: 150px; /* Adjusted maximum width */
            white-space: nowrap; /* Prevent wrapping */
            overflow: hidden; /* Hide overflow */
            text-overflow: ellipsis; /* Show ellipsis for overflow */
        }
        th {
            background-color: #f2f5f8;
            font-weight: bold;
            text-transform: uppercase;
            color: #8c9ba5;
            cursor: pointer; /* Add cursor pointer for sorting */
        }
        tr:hover {
            background-color: #f9fafb;
        }
        select {
            padding: 8px;
            border: 1px solid #e6e9ed;
            border-radius: 4px;
            background-color: #ffffff;
            font-size: 14px;
            color: #364656;
            width: 100%;
            margin-top: 8px; /* Added margin */
        }
        option {
            background-color: #ffffff;
            color: #364656;
        }
        .option {
            display: flex; /* Display label and selection side by side */
            align-items: center; /* Align vertically */
            margin-bottom: 8px; /* Added margin */
        }
        label {
            font-size: 14px; /* Adjusted font size */
            margin-right: 8px; /* Added margin */
        }
        /* Lighter colors for colored cells */
        .colored-cell {
            background-color: #f0f5ff; /* Light blue */
        }
        .export-btn {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
        }
    </style>
</head>
<body>

<h1>Spinnaker Usage Report</h1>

<div class="panel">
    <div class="option">
        <strong><label for="name-select">Spinnaker Application Name</label></strong>
        <select id="name-select" onchange="filterJsonData()">
            <option value="">Show all applications</option>
        </select>
    </div>
    <div class="option">
        <strong><label for="ignore-no-runs">Ignore pipelines with no runs</label></strong>
        <input type="checkbox" id="ignore-no-runs" onchange="filterJsonData()">
    </div>
    <div class="option">
        <strong><label for="ignore-dinghy">Ignore dinghy test pipelines</label></strong>
        <input type="checkbox" id="ignore-dinghy" onchange="filterJsonData()">
    </div>
    <div class="option">
        <strong><label for="hide-non-terraform">Hide Non-Terraform Pipelines</label></strong>
        <input type="checkbox" id="hide-non-terraform" onchange="filterJsonData()">
    </div>
    <div class="option">
        <strong><label for="date-select">Show data after</label></strong>
        <input type="date" id="date-select" onchange="filterJsonData()">
    </div>
</div>

<div class="panel">
    <table>
        <tr>
            <th>Total Number of Applications</th>
            <td id="total-applications"></td>
        </tr>
        <tr>
            <th>Total Number of Pipelines</th>
            <td id="total-pipelines"></td>
        </tr>
        <tr>
            <th>Total Number of Pipelines with No Runs</th>
            <td id="total-inactive-pipelines"></td>
        </tr>
    </table>
</div>

<div class="panel">
    <table id="json-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Pipeline Name</th>
                <th id="tf-version-header">TF Version</th>
                <th>Last Triggered At</th>
                <th>Last Triggered By</th>
            </tr>
        </thead>
        <tbody id="json-data">
            <!-- JSON data will be inserted here -->
        </tbody>
    </table>
</div>

<button class="export-btn" onclick="exportTableToCSV()">Export to CSV</button>

<script>
    // Updated JSON data with two records
    var jsonData = [
        {
            "name": "Monitoring",
            "Pipeline Name" : "grafana",
            "TF Version": "1.2.3",
            "Last Triggered At": "02-01-2024 10:22:04",
            "Last Triggered By": "john.doe@example.com",
        },
        {
            "name": "Toolchain",
            "Pipeline Name": "atlassian",
            "TF Version": "2.0.0",
            "Last Triggered At": "05-06-2023 14:26:14",
            "Last Triggered By": "john.doe@example.com"
        },
        {
            "name": "Toolchain",
            "Pipeline Name": "jenkins",
            "TF Version": "No runs",
            "Last Triggered At": "No runs",
            "Last Triggered By": "jane.smith@example.com"
        }
    ];

    // Function to render JSON data in HTML table
    function renderJsonData(data) {
        var tableBody = document.getElementById('json-data');
        tableBody.innerHTML = '';

        data.forEach(function(record) {
            var row = document.createElement('tr');

            row.innerHTML = '<td>' + record.name + '</td>' +
                            '<td>' + record["Pipeline Name"] + '</td>' +
                            '<td>' + record["TF Version"] + '</td>' +
                            '<td>' + record["Last Triggered At"] + '</td>' +
                            '<td>' + record["Last Triggered By"] + '</td>';
            tableBody.appendChild(row);
        });
    }

    // Function to export table data to CSV
    function exportTableToCSV() {
        var csv = [];
        var rows = document.querySelectorAll("#json-table tbody tr");

        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll("td, th");

            for (var j = 0; j < cols.length; j++)
                row.push(cols[j].innerText);

            csv.push(row.join(","));
        }

        // Download CSV file
        downloadCSV(csv.join("\n"), "table_data.csv");
    }

    // Function to download CSV file
    function downloadCSV(csv, filename) {
        var csvFile;
        var downloadLink;

        // Create CSV file
        csvFile = new Blob([csv], {type: "text/csv"});

        // Create download link
        downloadLink = document.createElement("a");

        // File name
        downloadLink.download = filename;

        // Create a link to the file
        downloadLink.href = window.URL.createObjectURL(csvFile);

        // Hide download link
        downloadLink.style.display = "none";

        // Add the link to DOM
        document.body.appendChild(downloadLink);

        // Click download link
        downloadLink.click();
    }

    // Initial setup
    renderJsonData(jsonData);

    // Add event listener for TF Version column header
    document.getElementById("tf-version-header").addEventListener("click", function() {
        sortTableByTFVersion();
    });
</script>

</body>
</html>
